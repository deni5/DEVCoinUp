// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";

contract DEVCoin is ERC20, Ownable, ERC20Capped, ERC20Burnable {
    uint8 constant DECIMALS = 14;

    constructor() ERC20("DEVCoin", "DEV") Ownable(msg.sender) ERC20Capped(8000000) {
    }

    function mint(address to, uint256 amount) public onlyOwner {
        _mint(to, amount);
    }

    function decimals() public override view returns (uint8) {
        return DECIMALS;
    }
        function _update(address _account, address _to, uint256 value) internal override(ERC20, ERC20Capped){
            super._update(_account,_to,value);
        }
    }
